name: "Godot CI"
on:
  push:
    branches:
      - main

# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
  GODOT_VERSION: 4.4.1
  EXPORT_NAME: TheCOOrP
  PROJECT_PATH: .
  BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
  ITCHIO_USERNAME: ${{ vars.ITCHIO_USERNAME }}
  ITCHIO_GAME: ${{ vars.ITCHIO_GAME }}


jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-22.04 # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Extract project version
        id: get_version
        shell: bash
        run: |
          VERSION=$(grep -oP 'config/version="\K[^"]+' "$PROJECT_PATH/project.godot")
          echo "PROJECT_VERSION=$VERSION" >> "$GITHUB_ENV"
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Godot Import
        continue-on-error: true
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --import
      - name: Windows Build
        run: |
          EXPORT_DIR="$(readlink -f build)"
          godot --headless --verbose --export-release "PCWin" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: win
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-22.04 # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Godot Import
        continue-on-error: true
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --import
      - name: Linux Build
        run: |
          EXPORT_DIR="$(readlink -f build)"
          godot --headless --verbose --export-release "PCLinux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux

  export-web:
    name: Web Export
    runs-on: ubuntu-22.04 # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Godot Import
        continue-on-error: true
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --import
      - name: Web Build
        run: |
          EXPORT_DIR="$(readlink -f build)"
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/web # The folder the action should deploy.

  export-mac:
    name: Mac Export
    runs-on: ubuntu-22.04 # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Godot Import
        continue-on-error: true
        run: |
          mkdir -v -p build/mac
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --import
      - name: Mac Build
        run: |
          EXPORT_DIR="$(readlink -f build)"
          godot --headless --verbose --export-release "PCMac" "$EXPORT_DIR/mac/$EXPORT_NAME.app.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: build/mac

  deploy-itchio:
    name: Deploy to Itch.io
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    needs:
      - export-windows
      - export-linux
      - export-mac
      - export-web
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          # fetch every artifact into ./build/<artifact-name>/**
          path: build
      - name: Upload Windows build
        run: |
          butler push build/win "$ITCHIO_USERNAME/$ITCHIO_GAME:windows" --userversion "$PROJECT_VERSION"
      - name: Upload Linux build
        run: |
          butler push build/linux "$ITCHIO_USERNAME/$ITCHIO_GAME:linux" --userversion "$PROJECT_VERSION"
      - name: Upload macOS build
        run: |
          butler push build/mac "$ITCHIO_USERNAME/$ITCHIO_GAME:mac" --userversion "$PROJECT_VERSION"
      - name: Zip Web export
        run: |
          cd build/web
          zip -r ../web.zip .
      - name: Push Web build
        run: |
          butler push build/web.zip "$ITCHIO_USERNAME/$ITCHIO_GAME:html" --userversion "$PROJECT_VERSION"
